name: build openwrt
on:
  push:
    branches:
      - ipk
    tags: [ 'v*' ]
  pull_request:

jobs:
  build-openwrt-1:
    name: Build openwrt ${{matrix.target.arch}}
    env:
      ENVIRONMENT: prod
    strategy:
      matrix:
        target:
          # - arch: "amd64"
          #   sdk: "https://downloads.openwrt.org/releases/22.03.0-rc5/targets/x86/64/openwrt-sdk-22.03.0-rc5-x86-64_gcc-11.2.0_musl.Linux-x86_64.tar.xz"
          # - arch: "aarch64_generic"
          #   sdk: "https://archive.openwrt.org/releases/21.02.3/targets/rockchip/armv8/openwrt-sdk-21.02.3-rockchip-armv8_gcc-8.4.0_musl.Linux-x86_64.tar.xz"
          # - arch: "aarch64_cortex-a53"
          #   sdk: "https://archive.openwrt.org/releases/21.02.3/targets/bcm27xx/bcm2710/openwrt-sdk-21.02.3-bcm27xx-bcm2710_gcc-8.4.0_musl.Linux-x86_64.tar.xz"
          # - arch: "aarch64_cortex-a72"
          #   sdk: "https://archive.openwrt.org/releases/21.02.3/targets/bcm27xx/bcm2711/openwrt-sdk-21.02.3-bcm27xx-bcm2711_gcc-8.4.0_musl.Linux-x86_64.tar.xz"
          # - arch: "arm_cortex-a7_neon-vfpv4"
          #   sdk: "https://archive.openwrt.org/releases/21.02.3/targets/ipq40xx/generic/openwrt-sdk-21.02.3-ipq40xx-generic_gcc-8.4.0_musl_eabi.Linux-x86_64.tar.xz"
          # - arch: "arm_cortex-a9"
          #   sdk: "https://archive.openwrt.org/releases/21.02.3/targets/bcm53xx/generic/openwrt-sdk-21.02.3-bcm53xx-generic_gcc-8.4.0_musl_eabi.Linux-x86_64.tar.xz"
          # - arch: "x86_64"
          #   sdk: "https://archive.openwrt.org/releases/21.02.3/targets/x86/64/openwrt-sdk-21.02.3-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz"
          # - arch: "i386_pentium4"
          #   sdk: "https://archive.openwrt.org/releases/21.02.3/targets/x86/generic/openwrt-sdk-21.02.3-x86-generic_gcc-8.4.0_musl.Linux-x86_64.tar.xz"  
          - arch: "mips"
            sdk: " https://downloads.openwrt.org/releases/19.07.9/targets/ar71xx/generic/openwrt-sdk-19.07.9-ar71xx-generic_gcc-7.5.0_musl.Linux-x86_64.tar.xz"
          - arch: "mipsle"
            sdk: "https://downloads.openwrt.org/releases/18.06.9/targets/ramips/mt7621/openwrt-sdk-18.06.9-ramips-mt7621_gcc-7.3.0_musl.Linux-x86_64.tar.xz"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with tag
        uses: actions/checkout@master

      - name: prepare requirements
        run: |
          sudo -E apt-get -y update
          sudo -E apt-get install -y openssl
          sudo -E apt-get install -y build-essential
          sudo -E apt-get install -y libssl-dev
          sudo -E apt-get install -y zip gzip upx wget make git
          sudo -E apt-get install -y libncurses5 libncurses5-dev unzip gawk zlib1g-dev

      - name: Install OpenWrt SDK
        run: |
          wget -O openwrt-sdk.tar.xz ${{ matrix.target.sdk }}
          xz -q -d openwrt-sdk.tar.xz && tar -xvf openwrt-sdk.tar
          mv -f openwrt-sdk-* openwrt-sdk

      - name: Prepare GOARCH
        run: |
          case ${{ matrix.target.arch }} in
            x86_64,amd64)
            echo "ARCH_4_GO=amd64" >> $GITHUB_ENV
            ;;
            386,i386_pentium4)
            echo "ARCH_4_GO=386" >> $GITHUB_ENV
            ;;
            arm64,aarch64_generic,aarch64_cortex-a53,aarch64_cortex-a72)
            echo "ARCH_4_GO=arm64" >> $GITHUB_ENV
            ;;
            arm,arm_cortex-a7_neon-vfpv4,arm_cortex-a9)
            echo "ARCH_4_GO=arm64" >> $GITHUB_ENV
            ;;
            mips)
            echo "ARCH_4_GO=mips" >> $GITHUB_ENV
            echo "MIPSFPU=softfloat" >> $GITHUB_ENV
            ;;
            mipsle)
            echo "ARCH_4_GO=mipsle" >> $GITHUB_ENV
            echo "MIPSFPU=softfloat" >> $GITHUB_ENV
            ;;
          esac

      - name: prepare for makefile
        run: |
          wget -O omniedge.tar.gz https://codeload.github.com/omniedgeio/omniedge-cli/tar.gz/v0.2.4?
          echo "OMNIEDGE_VERSION=v0.2.4" >> $GITHUB_ENV
          echo "HASH256=$(sh -c 'sha256sum < "$1" | cut -d" " -f1' -- omniedge.tar.gz)" >> $GITHUB_ENV
          echo "CROSS_OPENWRT=openwrt" >> $GITHUB_ENV
          echo "BUILD_ENV_GIT = ${{env.ENVIRONMENT}}" >> $GITHUB_ENV
          rm omniedge.tar.gz
          
      - name: Build Package
        run: |
          echo "src-link omniedge $GITHUB_WORKSPACE" > openwrt-sdk/feeds.conf
          echo 'CONFIG_PACKAGE_omniedge=y
          ' >> openwrt-sdk/.config
          cd openwrt-sdk
          cat feeds.conf.default >> feeds.conf
          cat feeds.conf
          ./scripts/feeds update -a > /dev/null
          ./scripts/feeds install uclibcxx > /dev/null
          make defconfig
          ./scripts/feeds install -d y -f -a
          make package/omniedge/compile V=s
          tree bin/packages/

      - name: Archive package
        uses: actions/upload-artifact@v2
        with:
          name: omniedge-${{ matrix.target.arch }}
          path: openwrt-sdk/bin/packages/*/omniedge/omniedge*.ipk
          if-no-files-found: error
      
      - name: Upload package to GitHub Release
        uses: svenstaro/upload-release-action@v2
        # if: "startsWith(github.ref, 'refs/tags/')"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          overwrite: true
          file: openwrt-sdk/bin/packages/*/omniedge/omniedge*.ipk
          tag: ${{ github.ref }}
