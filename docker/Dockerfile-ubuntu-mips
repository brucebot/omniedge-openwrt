#golang:mips
FROM omniedge/golang-mips:latest

# mips
ARG OPENWRT_SDK=https://downloads.openwrt.org/releases/19.07.9/targets/ar71xx/generic/openwrt-sdk-19.07.9-ar71xx-generic_gcc-7.5.0_musl.Linux-x86_64.tar.xz

# install golang
RUN apt update
RUN apt -y install build-essential autoconf openssl gzip libssl-dev zip upx

RUN wget -O openwrt-sdk.tar.xz ${OPENWRT_SDK}
RUN xz -q -d openwrt-sdk.tar.xz && tar -xvf openwrt-sdk.tar
RUN mv -f openwrt-sdk-* openwrt-sdk
RUN git clone -b dev https://github.com/yongqianme/omniedge-cli /app

WORKDIR /app
RUN pwd && ls

RUN /go/openwrt-sdk/staging_dir/toolchain-mips_24kc_gcc-7.5.0_musl/bin/mips-openwrt-linux-gcc
COPY . .
ARG BUILD_ENV

ENV CC=/go/openwrt-sdk/staging_dir/toolchain-mips_24kc_gcc-7.5.0_musl/bin/mips-openwrt-linux-gcc
ENV CXX=/go/openwrt-sdk/staging_dir/toolchain-mips_24kc_gcc-7.5.0_musl/bin/mips-openwrt-linux-g++
ENV CGO_ENABLED=1 
ENV GOARCH=mips
RUN go generate ./...
RUN GOOS=linux GOARCH=mips GOMIPS=softfloat BUILD_ENV=$BUILD_ENV make build
RUN upx -9 -k /app/out/omniedge

