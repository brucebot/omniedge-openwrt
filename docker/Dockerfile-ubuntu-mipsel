
#golang:mipsel
# mipsel_24kc
FROM golang:buster@sha256:4c5a1dead04f13777610d1691ae6e4a376a2a1d938a6ef40d1f25815c3eb20d1

ARG OPENWRT_SDK=https://downloads.openwrt.org/releases/22.03.0-rc5/targets/ramips/mt7621/openwrt-toolchain-22.03.0-rc5-ramips-mt7621_gcc-11.2.0_musl.Linux-x86_64.tar.xz

# install golang
RUN apt update
RUN apt -y install build-essential autoconf openssl gzip libssl-dev zip upx

RUN wget -O openwrt-sdk.tar.xz ${OPENWRT_SDK}
RUN xz -q -d openwrt-sdk.tar.xz && tar -xvf openwrt-sdk.tar
RUN mv -f openwrt-sdk-* openwrt-sdk
RUN git clone -b dev https://github.com/yongqianme/omniedge-cli /app

WORKDIR /app
RUN pwd && ls
RUN /go/openwrt-sdk/staging_dir/toolchain-arm_cortex-a7+neon-vfpv4_gcc-11.2.0_musl_eabi/bin/arm-openwrt-linux-gcc -v
# COPY . .
ARG BUILD_ENV

ENV CC=/go/openwrt-sdk/staging_dir/toolchain-arm_cortex-a7+neon-vfpv4_gcc-11.2.0_musl_eabi/bin/arm-openwrt-linux-gcc
ENV CXX=/go/openwrt-sdk/staging_dir/toolchain-arm_cortex-a7+neon-vfpv4_gcc-11.2.0_musl_eabi/bin/arm-openwrt-linux-g++
ENV CGO_ENABLED=1 
ENV GOARCH=arm
RUN go generate ./...
RUN BUILD_ENV=$BUILD_ENV make build
RUN upx -9 -k /app/out/omniedge


